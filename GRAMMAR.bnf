// Pdef grammar in BNF with JetBrains GrammarKit support.
{
    tokens=[
        // Punctuation
        dot='.'
        colon=':'
        comma=','
        semi=';'
        less='<'
        greater='>'
        lbrace='{'
        rbrace='}'
        lparent='('
        rparent=')'

        // Ids, docs and comments.
        // Dots cannot be used in definition, method, enum value, and field names.
        id='regexp:[a-zA-Z]{1}[a-zA-Z0-9_]*'
        doc='regexp:/\*\*(.|\n|\r)*?\*/'
        comment='regexp://.*'
    ]
}

File            ::= doc? Definition*
TypeName        ::= id ('.' id)*

Definition      ::= doc? (Enum | Struct | Interface)

Enum            ::= 'enum' id '{' EnumValues? '}'
EnumValues      ::= id (',' id)* ';'?

Struct          ::= ('struct' | 'exception') id '{' Field* '}'
Field           ::= id Type ';'

Interface       ::= 'interface' id '{' Method* '}'
Method          ::= doc? ('GET' | 'POST') id '(' (MethodArgs | TypeName)? ')' Type ';'
MethodArgs      ::= (id Type (',' id Type)*)

Type            ::= ValueType | ListType | SetType | MapType | TypeName
ValueType       ::= bool
                    | int16
                    | int32
                    | int64
                    | float
                    | double
                    | string
                    | datetime
                    | void
ListType        ::= list '<' Type '>'
SetType         ::= set '<' Type '>'
MapType         ::= map '<' Type ',' Type '>'
